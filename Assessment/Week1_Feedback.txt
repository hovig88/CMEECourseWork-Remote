Starting weekly assessment for Hovig, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 2.87 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: .gitignore, README.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# Computational Methods in Ecology and Evolution (CMEE) Masters Program

* This repository includes scripts and programs for weekly practicals/assignments required for the partial completion of the CMEE Masters program.

* The **CMEECourseWork-Remote** directory contains a `.gitignore` file and subdirectories named as `Week1`, `Week2`,...etc. This will be updated weekly as the course progresses. 

## Contents

### Week 1

This directory includes scripts/commands and data related to the first week's practicals/assignments. 

In the first week, the following sections were covered:

* Unix
* Shell scripting
* Version control with Git
* Scientific documents with LaTeX

## Authors

Jedi (in training): Hovig Artinian

Academic email: ha819@ic.ac.uk

Personal email: artinianhovig@gmail.com

## License

None

## Acknowledgements

I would like to thank Master Jedi Samraat Pawar for accepting me as his young padawan.
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, data, results

Found the following files: .gitignore, README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# Week 1: Course Induction & CMEE Bootcamp Intro

* The first week was an induction to the CMEE Masters program and an introduction to the Unix environment, shell scripting, version control with git, and typesetting with LaTeX.

* The **Week1** directory includes a `.gitignore` file and the following subdirectories: *Code*, *Data*, *Results*, and *Sandbox*.
    - Code - includes all the scripts and commands related to the Week 1 practicals/assignments
    - Data - includes the data needed as inputs for some of the scripts/commands
    - Results - essentially an empty directory, but includes an empty `.keep` file (since completely empty directories cannnot be pushed to git)
    - Sandbox - similar to a recycle bin; disposing files that are not needed for assessment, but might still be useful for the author if and when needed

## Contents

### Code

#### Unix

* UnixPrac1.txt - includes 5 single-line commands answering the fasta exercise questions

#### Shell scripting

* boilerplate.sh - prints a simple sentence
* ConcatenateTwoFiles.sh - merges two input files into one
* CountLines.sh - counts the number of lines of an input file
* csvtospace.sh - converts an input csv delimited file to space delimited
* MyExampleScript.sh - shows the basic usage of variables
* tabtocsv.sh - converts an input tab delimited file to comma delimited
* tiff2png.sh - converts all tiff files to png
* variables.sh - another demonstration of basic usage of variables

#### Scientific documents with LaTeX

* CompileLaTeX.sh - compiles an input LaTeX file into a pdf
* FirstBiblio.bib - BibTeX file (reference) needed to compile the pdf file
* FirstExample.tex - LaTeX format file that serves as an input for `CompileLaTeX.sh` script

### Data

* fasta - directory that includes 3 fasta files needed for the `UnixPrac1.txt` file (fasta exercise)
* Temperatures - directory that includes 4 csv input files used for `csvtospace.sh` script

## Authors

Jedi (in training): Hovig Artinian

Academic email: ha819@ic.ac.uk

Personal email: artinianhovig@gmail.com

## License

None

## Acknowledgements

First week of Jedi training completed!
**********************************************************************

Found following files in results directory: .keep...

Found 13 code files: ConcatenateTwoFiles.sh, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, .txt.txt, boilerplate.sh

Found the following extra files: .csv.csv
0.5 pt deducted per extra file

Current Points = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: concatenates two files together
# Arguments: 1 -> input file 1; 2 -> input file 2; 3 -> merged file
# Date: Oct 2019

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error (or warning):
ConcatenateTwoFiles.sh: line 8: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 9: $3: ambiguous redirect

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: CountLines.sh
# Desc: counts the number of lines in a file
# Arguments: 1 -> input file
# Date: Oct 2019

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 8: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: variables.sh
# Desc: using and reading variables in different ways
# Arguments: none
# Date: Oct 2019

# Shows the use of variables
MyVar="some string"
echo "the current value of the variable is" $MyVar
echo "Please enter a new string"
read MyVar
echo "the current value of the variable is" $MyVar

## Reading multiple values
echo "Enter two numbers separated by space(s)"
read a b
echo "you entered" $a "and" $b ". Their sum is:"
mysum=`expr $a + $b`
echo $mysum

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: CompileLaTeX.sh
# Desc: converts latex files to pdf
# Arguments: 1 -> latex file
# Date: Oct 2019

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex

## Cleanup
rm -f *~
rm -f *.aux
rm -f *.bbl
rm -f *.blg
rm -f *.dvi
rm -f *.log
rm -f *.nav
rm -f *.out
rm -f *.snm
rm -f *.toc

# -f flag ignores nonexistent files and arguments
**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error (or warning):
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: tiff2png.sh
# Desc: converts tiff files to png
# Arguments: none
# Date: Oct 2019

for f in *.tif;
	do
		echo "Converting $f";
		convert "$f" "$(basename "$f" .tif).jpg";
	done

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.jpg' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: csvtospace.sh
# Description: substitute the commas in the files with spaces
#
# Saves the output into a .txt file
# Arguments: 1 -> csv delimited file
# Date: Oct 2019

echo "Creating a space separated version of $1 ..."
cat $1 | tr -s "," " " > $1.txt # tr -s replaces commas with spaces; even repeated commas are replaced by one space only
echo "Done!"

for file in $1.txt
do
    mv "$file" "$(basename "$file" .csv.txt).txt" # fixing the file extension from .csv.txt to just .txt
done

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a space separated version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.02180s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Hovig Artinian}

\date{October 2019}

\begin{document}
    \maketitle

    \begin{abstract}
        This paper must be cool!
    \end{abstract}

    \section{Introduction}
    	Blah Blah!

    \section{Materials \& Methods}
    One of the most famous equations is:
    \begin{equation}
	    E =  mc^2
    \end{equation}
    This equation was first proposed by Einstein in 1905
    \cite{einstein1905does}.
    
    \bibliographystyle{plain}
    \bibliography{FirstBiblio}
\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: MyExampleScript.sh
# Desc: assigning variables and printing them in various ways
# Arguments: none
# Date: Oct 2019

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00474s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Annalen der Physik},
  volume={18},
  number={13},
  pages={639--41},
  year={1905}
}**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
## THIS TEXT FILE CONTAINS THE ANSWERS FOR THE FASTA EXERCISE ##

## 1 - COUNTING NUMBER OF LINES IN EACH FASTA FILE ##

printf "1. The number of lines in each fasta file is as follows:\n" && 
wc -l ../data/fasta/*.fasta

#########################################################
#   COMMENTS:
#   ---------
#   * \n prints a new line
#   * the -l flag counts the number of lines of a file
#########################################################

## 2 - PRINTING THE SEQUENCE OF THE E.COLI GENOME ##

printf "\n2. The sequence of the E.coli genome is: \n" && 
tail -n +2 ../data/fasta/E.coli.fasta

#########################################################
#   COMMENTS:
#   ---------
#   * the -n +2 flag outputs the content of the 
#     file starting from the second line
#########################################################

## 3 - COUNTING THE SEQUENCE LENGTH OF THE E.COLI GENOME ##

printf "\n3. The length of the E.coli genome sequence is " &&
tail -n +2 ../data/fasta/E.coli.fasta | tr -d '\n' | wc -m

#########################################################
#   COMMENTS:
#   ---------
#   * first part similar to command #2
#   * the -m flag prints the number of characters. 
#     However, this flag also takes into account 
#     trailing newlines. 
#   * the -d '\n' flag deals with this issue by 
#     deleting those newlines
#
#   ADDITIONAL COMMENT:
#   -------------------
#   Just to mention that there are two extra letters 
#   (R and Y) in the sequence. The length of the 
#   whole sequence is 4686137, but 4686135 if we 
#   exclude those two extra letters. 
#########################################################

## 4 - COUNTING THE MATCHES OF "ATGC" IN THE E.COLI GENOME ##

printf "\n4. The number of matches of the sequence 'ATGC' in the E.coli genome is " && 
tail -n +2 ../data/fasta/E.coli.fasta | tr -d '\n' | grep -o ATGC | wc -l

#########################################################
#   COMMENTS:
#   ---------
#   * the -o flag prints all the matched parts in the 
#     file, each on a separate line. This way we can 
#     figure out the number of occurences of the 
#     pattern by using the wc -l command
#   * without using the -o flag, we would only be 
#     counting the lines that contain the matched
#     pattern. So, if there is more than one occurence 
#     of the pattern in one line, we would not be able 
#     to detect it.
#########################################################

## 5 - COMPUTING THE AT/GC RATIO IN THE E.COLI GENOME ##

printf "\n5. The AT/GC ratio in the E.coli genome is " &&
base_A=$(grep -o A ../data/fasta/E.coli.fasta | wc -l) && 
base_T=$(grep -o T ../data/fasta/E.coli.fasta | wc -l) && 
base_G=$(grep -o G ../data/fasta/E.coli.fasta | wc -l) && 
base_C=$(grep -o C ../data/fasta/E.coli.fasta | wc -l) &&
printf "%.3f\n" "$(bc -l <<< "($base_A+$base_T) / ($base_G+$base_C)")"

#########################################################
#   COMMENTS:
#   ---------
#   * each variable computes the number of occurences 
#     of one of the four bases in the sequence
#   * the bc command serves as a calculator for bash. 
#     This is where we divide the total number of A-s 
#     and T-s with the total number of G-s and C-s to 
#     obtain the AT/GC ratio
#   * the -l flag assumes 20 digits after the decimal 
#     point by default
#   * the second printf command was included for the 
#     purpose of producing the output in a proper 
#     format:
#       - % takes anything before the digit
#       - 3f takes 3 digits after the decimal point
#       - \n inserts a new line
#
#   ADDITIONAL COMMENT:
#   -------------------
#   I tried running this command without assigning 
#   variables so that it becomes a one-liner, but it was 
#   ~3.7x more time-consuming. Therefore, I decided to 
#   stick with this one.
##########################################################
**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"

for file in $1.csv
do
    mv "$file" "$(basename "$file" .txt.csv).csv" # fixing the file extension from .txt.csv to just .csv
done

exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00770s

======================================================================
Inspecting script file .txt.txt...

File contents are:
**********************************************************************
**********************************************************************

Testing .txt.txt...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hovig Artinian ha819@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2019

echo -e "\nThis is a shell script! \n" #what does -e do?

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00299s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!